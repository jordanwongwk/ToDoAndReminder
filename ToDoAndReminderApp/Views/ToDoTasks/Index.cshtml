@model IEnumerable<ToDoAndReminderApp.Models.ToDoTask>

@{
    ViewData["Title"] = "Task List";
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        if (Notification.permission != "granted") {
            Notification.requestPermission();
        }
    });

    function CustomNotification(title, desc, url) {
        if (Notification.permission != "granted") {
            Notification.requestPermission();
        }
        else {
            var notification = new Notification(title, {
                body: desc,
            });

            notification.onclose = function () { console.log('Notification Closed'); }
        }
    }

    function RealTimeClockFunction()
        {
            var d = new Date();
            var currentHour = d.getHours();
            var currentMin = d.getMinutes();
            var currentSec = d.getSeconds();
            currentHour = ("0" + currentHour).slice(-2);        // Get only the last 2 digits
            currentMin = ("0" + currentMin).slice(-2);
            currentSec = ("0" + currentSec).slice(-2);

            document.getElementById("currentTime").innerHTML = currentHour + ":" + currentMin + ":" + currentSec;

            // Check for notification
            @foreach (var p in Model)
            {
                if (DateTime.Now.Date.CompareTo(p.TaskReminderDateTime.Date) == 0 && !p.IsTaskDone && p.IsNotificationTurnedOn)
                {
                    // Every minute notify once (when seconds touch 00)
                    <text>
                        if (currentHour >= @p.TaskReminderDateTime.Hour &&
                            currentMin >= @p.TaskReminderDateTime.Minute &&
                            currentSec == @p.TaskReminderDateTime.Second)
                        {
                            CustomNotification('@p.TaskTitle', '@p.TaskContent');
                        }
                    </text>
                }
            }
        }

    setInterval(RealTimeClockFunction, 1000);
</script>

<div align="center">
    <h1><b>Your Tasks List</b></h1>
    <h5>
        @DateTime.Today.ToString("D") //
        <element id="currentTime">00:00:00</element>
    </h5>
    <br />
    <h3><b>Tasks List</b></h3>

    <table class="table">
        <thead>
            <tr>
                <th>
                    Task Status*
                </th>
                <th>
                    Task
                </th>
                <th>
                    Reminder Status
                </th>
                <th>
                    Reminder Time
                </th>
                <th>
                    Options
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsTaskDone)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.TaskTitle)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.IsNotificationTurnedOn)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.TaskReminderDateTime)
                    </td>

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ToDoTaskID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ToDoTaskID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ToDoTaskID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <br />
    <p><i>* To edit the task's status, please go to <b>"Edit"</b> for that task.</i></p>
    <br />

    <h2>
        <b>
            <a asp-action="Create">Create New Task</a>
        </b>
    </h2>
</div>
